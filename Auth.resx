<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="HeaderPanel.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCABkAU4DASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD87KKKK9o4gpy02nrTAKKKKAFWnUi9KWgAooooAVaWhaKACiii
        gBy96WkXvS1QBRRRQIcvSlpBS0AJTl+7SUq0AOp1NFOqoiCn0wU+kMKKKBVGY6iiigchadTadQSFPplP
        poByd6KE70VQBTk702nr3oAKKKKAFWnU1adQBzNFFFcpsKKdSLxS1QBR1opVGKAFFLRRQAUCilWgBaKK
        KACiilFVEBV4paKKACiigUCH0UUUAFOWminUAOXvS0i96WgBVHSnUg6UtMQUq0lKtUQLRRRQNiinUi96
        WgkKfTBT6AHL3opFpasAqQd6jqSgBKKKKAFWnUlLQBzNKFNJT1rnNgooooAKfTcGnUAFFFFABTlpMGlo
        AKKKKACnL3ptOWqAWiiiiImFKo6UlOXpQAtFFFACrS0i0tADl70tIvFLTAdS0lLVEhSrSUq0EC0UUUAO
        XvS0i96WgBVp1NWnUAKtLSLS1YC06m06gAooooAdS0lLQBzWDTqKK5zYKBR1pVGKAHUUUUAFFFLg0ALR
        RRQAUUUUAFPWminVQBRRRQIKcKRR0p1ABSUtGKAFX7tOpFpRQA6gUUqjpTAdRRRVEhTlpop1BIUUUUCH
        LS0LRQAq0tC9KWgBy9KKRaWrAUU6kTvS0AFFFFADqWkpaAOcoopcGuc2BRinUUUAFFFFABTqaKdQAUUU
        UAFFFKKoBV4paKKACiilAoEKKWiigApVpKctABTl702nLxQAtOXpTacKYC0UUVRIq0tItLQAUopKcveg
        gWiiigBy9KWkXpS0AOWiiirAcnelpE70tABRRRQA6lpKWgDncGnUUVzmwUUUUAFG00U6gAWiiigAoooo
        AKcvFIFNOqgCiiigApwpop9AgooooABTqRaWgBRTqRe9LQIBT6ao6U6mMKKKBVGY5aKKKCgpy02nrQQF
        FFAoAcKUUUq0ALRRRVAPXvRS0lMAooooAfRRRQBz9FFFc5sFFFFABTqKKACiiigAoooqgHr/AEooooAK
        KKKABe1PoooAKKKKAFWloooEOXvS0UUGY5elLRRTNApVooqjIWiiigBadRRQAUq0UUAOpVoooAWloooA
        dRRRVgFFFFAD6KKKAP/Z
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAODP7QDHp9wAoGnBAJZYuQCkbcIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAIs/rgCORLAAfCimAHcipABwGaQAdyerAHYlqQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAiz+uAJBFsAJ9KaYoeSamY3gnqG98LasKezKwAIFLuwB+RLgAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAM+v3QB/JqIAgyylAIIrpQCLQbAAjEKwFXsopsd3JKf/dSSp+XYorGF9OrYUgEm6An9F
        uAD///8A////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AA/+AAAf/+AP///gH///8D////////////8=
</value>
  </data>
</root>